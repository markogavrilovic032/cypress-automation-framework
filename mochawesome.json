{
  "stats": {
    "suites": 40,
    "tests": 175,
    "passes": 174,
    "pending": 0,
    "failures": 1,
    "testsRegistered": 175,
    "passPercent": 99.42857142857143,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-10-16T17:46:51.212Z",
    "end": "2023-10-16T17:52:32.391Z",
    "duration": 341179
  },
  "results": [
    {
      "uuid": "f8975722-4065-49ae-9374-d182638951af",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eacfce82-36de-47f6-b923-9515cf195feb",
          "title": "Alias and invoke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and invoke Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 3702,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get('.thumbnail').as('productThumbnail');\ncy.get('@productThumbnail').should('have.length', 16);\n// cy.get('@productThumbnail').find('.oneprice').each(($el, index, $list) => {\n//     cy.log($el.text())\n// })\ncy.get('.thumbnail').find('.oneprice').invoke('text').as('itemPrice');\ncy.get('.thumbnail').find('.pricenew').invoke('text').as('selItemPrices');\nvar itemsTotal = 0;\ncy.get('@itemPrice').then($linkText => {\n  var itemsPricesTotal = 0;\n  var itemPrice = $linkText.split('$');\n  var i;\n  for (i = 0; i < itemPrice.length; i++) {\n    cy.log(itemPrice[i]);\n    itemsPricesTotal += Number(itemPrice[i]);\n  }\n  itemsTotal += itemsPricesTotal;\n  cy.log(\"Non sale price items total: \" + itemsPricesTotal);\n});\ncy.get('@selItemPrices').then($linkText => {\n  var selItemsPrices = 0;\n  var selItemPrices = $linkText.split('$');\n  var i;\n  for (i = 0; i < selItemPrices.length; i++) {\n    cy.log(selItemPrices[i]);\n    selItemsPrices += Number(selItemPrices[i]);\n  }\n  itemsTotal += selItemsPrices;\n  cy.log(\"SALE price items total: \" + selItemsPrices);\n}).then(() => {\n  cy.log(\" Non sale and SALE price items total: \" + itemsTotal);\n  expect(itemsTotal).to.equal(660.5);\n});",
              "err": {},
              "uuid": "636c3d50-9502-4dc3-b993-cd9766c007e3",
              "parentUUID": "eacfce82-36de-47f6-b923-9515cf195feb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "636c3d50-9502-4dc3-b993-cd9766c007e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3702,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "183d8c2a-3b2e-4309-83bc-1d74269d3a64",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "file": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b15208b-a609-4538-8c87-343278eb9104",
          "title": "Test contact US form via Automation test store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to subm,it a successful submission via contact us form",
              "fullTitle": "Test contact US form via Automation test store Should be able to subm,it a successful submission via contact us form",
              "timedOut": null,
              "duration": 10547,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get(\"a[href$='contact']\").should('be.visible').click().then(function (linkText) {\n  cy.log(\"Clicked on link using text: \" + linkText.text());\n  cy.log(\"11111111111111111111111111111111111111111111111111111111111111111\");\n});\ncy.get(\"@user\").then(user => {\n  cy.get('[name=\"first_name\"]').type(user.first_name);\n  cy.get('#ContactUsFrm_email').type(user.email);\n});\ncy.get('#ContactUsFrm_email').should('have.attr', 'name', 'email');\ncy.get('#ContactUsFrm_enquiry').type(\"njanjanjanjanjanjanjanjanjanjanjanja\");\ncy.get(\"button[title='Submit']\").click();\ncy.get(\".mb40 > p:nth-of-type(2)\").should('have.text', 'Your enquiry has been successfully sent to the store owner!');\ncy.log(\"Test has completed\");",
              "err": {},
              "uuid": "eebacfa0-78e8-4e0e-b11f-c93977c654ad",
              "parentUUID": "8b15208b-a609-4538-8c87-343278eb9104",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eebacfa0-78e8-4e0e-b11f-c93977c654ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10547,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3b2ce613-57c3-4ab0-a997-137964b5eb9b",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "file": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2dc4701e-28f7-40fd-be26-259ada1c4108",
          "title": "Inspect Automation Test Store items using chain of comandss",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click on first item using item header",
              "fullTitle": "Inspect Automation Test Store items using chain of comandss Click on first item using item header",
              "timedOut": null,
              "duration": 4718,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get('.prdocutname').contains('Skinsheen Bronzer Stick').click().then(function (itemHeaderText) {\n  console.log(\"Selected te following item: \" + itemHeaderText);\n});",
              "err": {},
              "uuid": "5b0298d3-19b3-456b-8af8-34e3dcf33598",
              "parentUUID": "2dc4701e-28f7-40fd-be26-259ada1c4108",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b0298d3-19b3-456b-8af8-34e3dcf33598"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4718,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8b53aed4-bc1b-4f79-83ec-070dbeeae335",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\iterate-ver-elements.js",
      "file": "cypress\\e2e\\automation-test-store\\iterate-ver-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a0c6fce5-6106-4e95-93ce-8d9e00343119",
          "title": "Iterate over element",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log information f all air care products",
              "fullTitle": "Iterate over element Log information f all air care products",
              "timedOut": null,
              "duration": 6417,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.fixed_wrapper .prdocutname').each(($el, index, $list) => {\n  cy.log(\"Index : \" + index + \" : \" + $el.text());\n});",
              "err": {},
              "uuid": "7a1d3367-56c5-43a9-bbf1-625b409838b6",
              "parentUUID": "a0c6fce5-6106-4e95-93ce-8d9e00343119",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add specific product to basket",
              "fullTitle": "Iterate over element Add specific product to basket",
              "timedOut": null,
              "duration": 4235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.get('.fixed_wrapper .prdocutname').each(($el, index, $list) => {\n//     if($el.text().includes('Curls to straight Shampoo')){\n//         cy.wrap($el).click()\n//     }\n// })\ncy.selectProduct('urls to straight Shampoo');",
              "err": {},
              "uuid": "1ab69739-c7cd-42a2-aa0b-671e74af5a2a",
              "parentUUID": "a0c6fce5-6106-4e95-93ce-8d9e00343119",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over element Add another specific product to basket",
              "timedOut": null,
              "duration": 4378,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Seaweed Conditioner');",
              "err": {},
              "uuid": "ccd6d176-b936-4049-a39d-e6e196cc2c56",
              "parentUUID": "a0c6fce5-6106-4e95-93ce-8d9e00343119",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over element Add another specific product to basket",
              "timedOut": null,
              "duration": 4637,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Eau Parfumee au The Vert Shampoo');",
              "err": {},
              "uuid": "d5a67fa8-1e68-40f2-82a3-003942c8750b",
              "parentUUID": "a0c6fce5-6106-4e95-93ce-8d9e00343119",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a1d3367-56c5-43a9-bbf1-625b409838b6",
            "1ab69739-c7cd-42a2-aa0b-671e74af5a2a",
            "ccd6d176-b936-4049-a39d-e6e196cc2c56",
            "d5a67fa8-1e68-40f2-82a3-003942c8750b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19667,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "990846d0-9930-44e2-97a0-38d141aadcbb",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "file": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb115634-03d1-428c-9662-0a873106ee88",
          "title": "Veryying variables cypress commands and jquery cmmands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate properties of the Contact Us Page",
              "fullTitle": "Veryying variables cypress commands and jquery cmmands Validate properties of the Contact Us Page",
              "timedOut": null,
              "duration": 4615,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get(\"a[href$='contact']\").should('be.visible').click();\n//cypress comand and chaining\ncy.contains('#ContactUsFrm', 'Contact Us Form').find('#field_11').should('contain', 'First name:');\n//JQuery Approach\ncy.contains('#ContactUsFrm', 'Contact Us Form').then(text => {\n  const firstNameText = text.find('#field_11').text();\n  expect(firstNameText).to.contain('First name:');\n  //Enable commands (closure)\n  cy.get('#field_11').then(finText => {\n    cy.log(finText.text());\n    cy.log(finText);\n  });\n});\n//Enable commands (closure)",
              "err": {},
              "uuid": "3261a9e5-500b-460f-98e8-9bb1ce024348",
              "parentUUID": "bb115634-03d1-428c-9662-0a873106ee88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3261a9e5-500b-460f-98e8-9bb1ce024348"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4615,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "39a4630d-6b1c-47cc-8c38-8e938eebd812",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\hooks.js",
      "file": "cypress\\e2e\\other\\hooks.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68f7910f-e5fe-4367-8502-503b00bf75bf",
          "title": "hooks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Examle test 1",
              "fullTitle": "hooks Examle test 1",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(\"TEST1\");",
              "err": {},
              "uuid": "2c2369b8-e8ad-4f3b-95a6-f44b9d3e2deb",
              "parentUUID": "68f7910f-e5fe-4367-8502-503b00bf75bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Examle test 2",
              "fullTitle": "hooks Examle test 2",
              "timedOut": null,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(\"TEST2\");",
              "err": {},
              "uuid": "3b8c3ab0-024f-4c4d-a841-9b75b690d43f",
              "parentUUID": "68f7910f-e5fe-4367-8502-503b00bf75bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c2369b8-e8ad-4f3b-95a6-f44b9d3e2deb",
            "3b8c3ab0-024f-4c4d-a841-9b75b690d43f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 99,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "863b1b70-eee5-4506-acc3-697e4777b746",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\same-origin-plicy22.js",
      "file": "cypress\\e2e\\other\\same-origin-plicy22.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a98f1910-dad7-446b-8fc7-ed7ffc03a79c",
          "title": "Cypress web security 2",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate visiting two deferent domain 2",
              "fullTitle": "Cypress web security 2 Validate visiting two deferent domain 2",
              "timedOut": null,
              "duration": 5807,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com/\");\ncy.visit(\"https://www.automationteststore.com/\");",
              "err": {},
              "uuid": "7a618ca1-0d6d-4634-9c2c-8152976fc629",
              "parentUUID": "a98f1910-dad7-446b-8fc7-ed7ffc03a79c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate visiting two deferent domain via user aqctions 2",
              "fullTitle": "Cypress web security 2 Validate visiting two deferent domain via user aqctions 2",
              "timedOut": null,
              "duration": 5173,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com/\");\ncy.get('#automation-test-store').invoke('removeAttr', 'target').click();",
              "err": {},
              "uuid": "b3f2106c-2889-415f-a059-965bbefea0d1",
              "parentUUID": "a98f1910-dad7-446b-8fc7-ed7ffc03a79c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Orgin command",
              "fullTitle": "Cypress web security 2 Orgin command",
              "timedOut": null,
              "duration": 3865,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.origin('webdriveruniversity.com', () => {\n//     cy.visit('/');\n// });\n// cy.origin('automationteststore.com', () => {\n//     cy.visit('/');\n// });\ncy.visit(\"https://www.webdriveruniversity.com/\");\ncy.visit(\"https://www.selectors.webdriveruniversity.com/\");",
              "err": {},
              "uuid": "e57b2f3c-f2a8-44bb-83ab-85dbce5ff6fa",
              "parentUUID": "a98f1910-dad7-446b-8fc7-ed7ffc03a79c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a618ca1-0d6d-4634-9c2c-8152976fc629",
            "b3f2106c-2889-415f-a059-965bbefea0d1",
            "e57b2f3c-f2a8-44bb-83ab-85dbce5ff6fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14845,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "588fd1dd-1111-418a-acbc-7fe94924261a",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d9225ab3-cdee-4380-9a2e-be32c972c2fb",
          "title": "Verify Autocomplete dropdown list",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific product via autocomplete list ",
              "fullTitle": "Verify Autocomplete dropdown list Select specific product via autocomplete list ",
              "timedOut": null,
              "duration": 2146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#autocomplete-textfield').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Autocomplete-TextField');\ncy.get('#myInput').type('A');\ncy.get('#myInputautocomplete-list>*').each(($el, index, $list) => {\n  const prod = $el.text();\n  const productToSelect = 'Avacado';\n  if (prod === productToSelect) {\n    // $el.click()\n    $el.trigger('click');\n    cy.get('#submit-button').click();\n    cy.url().should('include', productToSelect);\n  }\n});",
              "err": {},
              "uuid": "46e49a71-ecd2-4563-90a4-a6ab384c55ca",
              "parentUUID": "d9225ab3-cdee-4380-9a2e-be32c972c2fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select and verify Grapes",
              "fullTitle": "Verify Autocomplete dropdown list Select and verify Grapes",
              "timedOut": null,
              "duration": 1089,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#autocomplete-textfield').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Autocomplete-TextField');\ncy.get('#myInput').type('G');\ncy.get('#myInputautocomplete-list>*').each(($el, index, $list) => {\n  const prod = $el.text();\n  const productToSelect = 'Grapes';\n  if (prod === productToSelect) {\n    // $el.click()\n    $el.trigger('click');\n    cy.get('#submit-button').click();\n    cy.url().should('include', productToSelect);\n  }\n});",
              "err": {},
              "uuid": "e4e0e790-c6cf-4e0e-a3eb-c0859741083a",
              "parentUUID": "d9225ab3-cdee-4380-9a2e-be32c972c2fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46e49a71-ecd2-4563-90a4-a6ab384c55ca",
            "e4e0e790-c6cf-4e0e-a3eb-c0859741083a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "64a000f4-2920-4297-be30-2d0ab2120fd4",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "file": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc9e275d-ec5b-4925-bc6e-5632a213010a",
          "title": "Validate webdriveruni homepage links",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Confirm links redirect to the correct pages",
              "fullTitle": "Validate webdriveruni homepage links Confirm links redirect to the correct pages",
              "timedOut": null,
              "duration": 3865,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#contact-us').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'contactus');\ncy.go('back');\ncy.reload();\ncy.url().should('include', 'https://www.webdriveruniversity.com');\n// cy.reload(true)\ncy.go('forward');\ncy.url().should('include', 'contactus');\ncy.go('back');\ncy.get('#login-portal').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Login-Portal');",
              "err": {},
              "uuid": "501d6fd2-032a-46df-a633-6607e02c4aa6",
              "parentUUID": "dc9e275d-ec5b-4925-bc6e-5632a213010a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Challenge",
              "fullTitle": "Validate webdriveruni homepage links Challenge",
              "timedOut": null,
              "duration": 855,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#to-do-list').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'To-Do-List');\ncy.go('back');\ncy.url().should('eq', 'https://www.webdriveruniversity.com/');",
              "err": {},
              "uuid": "d495ebfb-067d-4c32-9c05-9ce4f2fcb3b0",
              "parentUUID": "dc9e275d-ec5b-4925-bc6e-5632a213010a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "501d6fd2-032a-46df-a633-6607e02c4aa6",
            "d495ebfb-067d-4c32-9c05-9ce4f2fcb3b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ce19e259-0dec-4b56-bdc3-f2bfeebdb0f9",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\checkbox.js",
      "file": "cypress\\e2e\\webdriver-uni\\checkbox.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7791074-1274-4de1-a645-4ca0573b5ed7",
          "title": "VErify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "VErify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 1505,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#checkboxes > :nth-child(1) > input').check().should('be.checked');\ncy.get('#checkboxes > :nth-child(1) > input').as('option-1');\ncy.get('@option-1').check().should('be.checked');\ncy.get(':nth-child(5) > input').as('option-3');\ncy.get('@option-3').uncheck().should('not.be.checked');",
              "err": {},
              "uuid": "8263212b-1a97-4878-82e4-8dd916f11f5c",
              "parentUUID": "f7791074-1274-4de1-a645-4ca0573b5ed7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check mutiple checkboxes",
              "fullTitle": "VErify checkboxes via webdriveruni Check mutiple checkboxes",
              "timedOut": null,
              "duration": 535,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type='checkbox']\").check(['option-1', 'option-2', 'option-3', 'option-4']).should('be.checked');",
              "err": {},
              "uuid": "c145a3ac-dcea-409d-9dcc-29300bd25ed4",
              "parentUUID": "f7791074-1274-4de1-a645-4ca0573b5ed7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8263212b-1a97-4878-82e4-8dd916f11f5c",
            "c145a3ac-dcea-409d-9dcc-29300bd25ed4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2040,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "08efbedf-3645-4423-bb5b-3b19bf3cbe40",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\contact-us.js",
      "file": "cypress\\e2e\\webdriver-uni\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7859523c-bdef-4601-8c87-2bb5803c12c1",
          "title": "Test contact US form via Webdriver",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to subm,it a successful submission via contact us form",
              "fullTitle": "Test contact US form via Webdriver Should be able to subm,it a successful submission via contact us form",
              "timedOut": null,
              "duration": 5811,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should('have.property', 'charset').and('eq', 'UTF-8');\ncy.title().should('include', 'WebDriver | Contact Us');\ncy.url().should('include', 'Contact-Us');\nconst_Us_PO.conctactForm_Submisstion(data.first_name, data.last_name, data.email, data.comments, '#contact_reply', 'Thank You for your Message!');",
              "err": {},
              "uuid": "a01659f8-fd7a-48eb-b24f-7a2dfcd4e146",
              "parentUUID": "7859523c-bdef-4601-8c87-2bb5803c12c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to subm,it a successful submission via contact us form as all fileds are requred",
              "fullTitle": "Test contact US form via Webdriver Should not be able to subm,it a successful submission via contact us form as all fileds are requred",
              "timedOut": null,
              "duration": 3153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const_Us_PO.conctactForm_Submisstion(data.first_name, data.last_name, \" \", data.comments, 'body', 'Error: Invalid email address');",
              "err": {},
              "uuid": "a171c7f3-e121-49f9-8687-cd764b310c2b",
              "parentUUID": "7859523c-bdef-4601-8c87-2bb5803c12c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a01659f8-fd7a-48eb-b24f-7a2dfcd4e146",
            "a171c7f3-e121-49f9-8687-cd764b310c2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8964,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e24fb6db-753c-46a0-9e10-5260581f29e9",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "file": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f320a433-707a-4253-834a-09f9fd174e69",
          "title": "Handling data via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate and assert total age of all users",
              "fullTitle": "Handling data via webdriveruni Calculate and assert total age of all users",
              "timedOut": null,
              "duration": 1705,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var userDetails = [];\nlet numb = 0;\ncy.get('#thumbnail-1 td').each(($el, index, $list) => {\n  userDetails[index] = $el.text();\n}).then(() => {\n  var i;\n  for (i = 0; i < userDetails.length; i++) {\n    // cy.log(userDetails[i])\n    if (Number(userDetails[i])) {\n      numb += Number(userDetails[i]);\n    }\n  }\n  cy.log(\"Found total age: \" + numb);\n  expect(numb).to.eq(322);\n});",
              "err": {},
              "uuid": "96ccf079-7a67-4169-9f15-1048a1a4452f",
              "parentUUID": "f320a433-707a-4253-834a-09f9fd174e69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate and assert the age of a given user based on last name",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the age of a given user based on last name",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#thumbnail-1 tr td:nth-child(2)').each(($el, index, $list) => {\n  const text = $el.text();\n  if (text.includes('Woods')) {\n    cy.get('#thumbnail-1 tr td:nth-child(2)').eq(index).next().then(age => {\n      const userAge = age.text();\n      expect(userAge).to.equal('80');\n    });\n  }\n});",
              "err": {},
              "uuid": "c0bccfe6-fec9-4f29-b3c8-42b36cde8952",
              "parentUUID": "f320a433-707a-4253-834a-09f9fd174e69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96ccf079-7a67-4169-9f15-1048a1a4452f",
            "c0bccfe6-fec9-4f29-b3c8-42b36cde8952"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "88f9dfeb-5af9-4b1e-b61c-c891ceb04e00",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\datepicker.js",
      "file": "cypress\\e2e\\webdriver-uni\\datepicker.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45bd7850-1745-4cd3-8756-1f360b8d71f3",
          "title": "Test Datepicker via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select date from date picker",
              "fullTitle": "Test Datepicker via webdriveruni Select date from date picker",
              "timedOut": null,
              "duration": 4825,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#datepicker').click();\n// let date = new Date();\n// date.setDate(date.getDate()) // get current date\n// cy.log(date.getDate())\n// let date2 = new Date();\n// date2.setDate(date.getDate() + 5)\n// cy.log(date2.getDate())\nvar date = new Date();\ndate.setDate(date.getDate() + 386);\nvar futureYear = date.getFullYear();\nvar futureMounth = date.toLocaleString('default', {\n  month: \"long\"\n});\nvar futureDay = date.getDate();\ncy.log(\"Future year to select: \" + futureYear);\ncy.log(\"Future mounth to select: \" + futureMounth);\ncy.log(\"Future day to select: \" + futureDay);\nfunction selectMounthAndYear() {\n  cy.get('.datepicker-dropdown').find('.datepicker-switch').first().then(currentDate => {\n    if (!currentDate.text().includes(futureYear)) {\n      cy.get('.next').first().click();\n      selectMounthAndYear();\n    }\n  }).then(() => {\n    cy.get('.datepicker-dropdown').find('.datepicker-switch').first().then(currentDate => {\n      if (!currentDate.text().includes(futureMounth)) {\n        cy.get('.next').first().click();\n        selectMounthAndYear();\n      }\n    });\n  });\n}\nfunction selectFutureDay() {\n  cy.get('[class=\"day\"]').contains(futureDay).click();\n}\nselectMounthAndYear();\nselectFutureDay();\n// expect(cy.get('#datepicker').text()).to.equal('111111111111111')",
              "err": {},
              "uuid": "58bf1000-e9bb-43c8-bab6-550f51b12d97",
              "parentUUID": "45bd7850-1745-4cd3-8756-1f360b8d71f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58bf1000-e9bb-43c8-bab6-550f51b12d97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "76e9f96d-9128-4918-874c-21f8d9d1f905",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\iframe.js",
      "file": "cypress\\e2e\\webdriver-uni\\iframe.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6955f2b8-5c25-4639-9ab3-2782da23ba67",
          "title": "Hadling IFrame and Modules",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Handle webdriveruni iframe and module",
              "fullTitle": "Hadling IFrame and Modules Handle webdriveruni iframe and module",
              "timedOut": null,
              "duration": 2800,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#iframe').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'IFrame');\ncy.get('#frame').then($iframe => {\n  const body = $iframe.contents().find('body');\n  cy.wrap(body).as('iframe');\n});\ncy.get('@iframe').find('#button-find-out-more').click();\ncy.get('@iframe').find('#myModal').as('modal');\ncy.get('@modal').should($expectText => {\n  const text = $expectText.text();\n  expect(text).to.include('Welcome to webdriveruniversity.com we sell a wide range of electrical goods such as laptops, game consoles, cameras...');\n});\ncy.get('@modal').contains('Close').click();",
              "err": {},
              "uuid": "50dc6bf6-bd81-4947-8bab-2010b6e1d553",
              "parentUUID": "6955f2b8-5c25-4639-9ab3-2782da23ba67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50dc6bf6-bd81-4947-8bab-2010b6e1d553"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2800,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cd3bf80c-63b1-45e1-896d-6d965dfefc6e",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\js-alerts.js",
      "file": "cypress\\e2e\\webdriver-uni\\js-alerts.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05d7d318-6871-47b3-a434-0372798bee00",
          "title": "Handle js alerts",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Confirm js alerts contains corect text",
              "fullTitle": "Handle js alerts Confirm js alerts contains corect text",
              "timedOut": null,
              "duration": 1526,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Popup-Alerts');\ncy.get('#button1').click();\ncy.on('window:alert', str => {\n  expect(str).equal('I am an alert box!');\n});",
              "err": {},
              "uuid": "e5c0bd06-80a6-4772-8460-1ce2dc76f6db",
              "parentUUID": "05d7d318-6871-47b3-a434-0372798bee00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate js confirm alert box works correctly when click confirm",
              "fullTitle": "Handle js alerts Validate js confirm alert box works correctly when click confirm",
              "timedOut": null,
              "duration": 494,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Popup-Alerts');\ncy.get('#button4').click();\ncy.on('window:confirm', str => {\n  return true;\n});\ncy.get('#confirm-alert-text').contains('You pressed OK!');",
              "err": {},
              "uuid": "ebad4eed-52ed-4e7b-813f-b31b9db54983",
              "parentUUID": "05d7d318-6871-47b3-a434-0372798bee00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate js confirm alert box works correctly when click cansel button",
              "fullTitle": "Handle js alerts Validate js confirm alert box works correctly when click cansel button",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Popup-Alerts');\ncy.get('#button4').click();\ncy.on('window:confirm', str => {\n  return false;\n});\ncy.get('#confirm-alert-text').contains('You pressed Cancel!');",
              "err": {},
              "uuid": "756a258f-01f4-447f-8e9a-86ac9e5a5510",
              "parentUUID": "05d7d318-6871-47b3-a434-0372798bee00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate js confirm alert box using a stub",
              "fullTitle": "Handle js alerts Validate js confirm alert box using a stub",
              "timedOut": null,
              "duration": 433,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Popup-Alerts');\nconst stub = cy.stub();\ncy.on('window:confirm', stub);\ncy.get('#button4').click().then(() => {\n  expect(stub.getCall(0)).to.be.calledWith('Press a button!');\n}).then(() => {\n  return true;\n}).then(() => {\n  cy.get('#confirm-alert-text').contains('You pressed OK!');\n});",
              "err": {},
              "uuid": "34a9cbda-dac4-4a83-a399-7fe08a8f8948",
              "parentUUID": "05d7d318-6871-47b3-a434-0372798bee00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5c0bd06-80a6-4772-8460-1ce2dc76f6db",
            "ebad4eed-52ed-4e7b-813f-b31b9db54983",
            "756a258f-01f4-447f-8e9a-86ac9e5a5510",
            "34a9cbda-dac4-4a83-a399-7fe08a8f8948"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2954,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a4517ea1-dba5-422d-bda6-0c3986391bbf",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\mouse-actions.js",
      "file": "cypress\\e2e\\webdriver-uni\\mouse-actions.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "724d3147-c290-4dc1-8071-518ed217489e",
          "title": "Test mouse actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Scroll element into view",
              "fullTitle": "Test mouse actions Scroll element into view",
              "timedOut": null,
              "duration": 1613,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Actions');",
              "err": {},
              "uuid": "35721d6b-b7b3-4e42-a67b-9f0e66308812",
              "parentUUID": "724d3147-c290-4dc1-8071-518ed217489e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to drag and drop a draggable item",
              "fullTitle": "Test mouse actions I should be able to drag and drop a draggable item",
              "timedOut": null,
              "duration": 611,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Actions');\ncy.get('#draggable').trigger('mousedown', {\n  which: 1\n});\ncy.get('#droppable').trigger('mousemove').trigger('mouseup', {\n  force: true\n});",
              "err": {},
              "uuid": "be90b14a-dd5f-4be3-9f69-9aa2ccf523ee",
              "parentUUID": "724d3147-c290-4dc1-8071-518ed217489e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Double click",
              "fullTitle": "Test mouse actions Double click",
              "timedOut": null,
              "duration": 555,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Actions');\ncy.get('#double-click').dblclick();",
              "err": {},
              "uuid": "08b087f5-f088-46ae-97fa-6bbde08a17a1",
              "parentUUID": "724d3147-c290-4dc1-8071-518ed217489e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able hold down the left mouse click button on a give item",
              "fullTitle": "Test mouse actions I should be able hold down the left mouse click button on a give item",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Actions');\ncy.get('#click-box').trigger('mousedown', {\n  which: 1\n}).then($element => {\n  expect($element).to.have.css('background-color', 'rgb(0, 255, 0)');\n});",
              "err": {},
              "uuid": "28e7f306-ed33-456e-999b-b8a21c0ebf63",
              "parentUUID": "724d3147-c290-4dc1-8071-518ed217489e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35721d6b-b7b3-4e42-a67b-9f0e66308812",
            "be90b14a-dd5f-4be3-9f69-9aa2ccf523ee",
            "08b087f5-f088-46ae-97fa-6bbde08a17a1",
            "28e7f306-ed33-456e-999b-b8a21c0ebf63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3264,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "03d20cbb-a470-4f02-9d6b-5ba27348c3a1",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\radio-button.js",
      "file": "cypress\\e2e\\webdriver-uni\\radio-button.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f99f7310-5c40-49ca-892a-2040882fe399",
          "title": "Verify radio buttons via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check specific radio button",
              "fullTitle": "Verify radio buttons via webdriveruni Check specific radio button",
              "timedOut": null,
              "duration": 1720,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#radio-buttons').find(\"[type='radio']\").first().check();\ncy.get('#radio-buttons').find(\"[type='radio']\").eq(1).check();",
              "err": {},
              "uuid": "f62bfc5d-5ad7-4439-bcbd-8d47c0848e02",
              "parentUUID": "f99f7310-5c40-49ca-892a-2040882fe399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate the states of specific radio button",
              "fullTitle": "Verify radio buttons via webdriveruni Validate the states of specific radio button",
              "timedOut": null,
              "duration": 644,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[value='lettuce']\").should('not.be.checked');\ncy.get(\"[value='pumpkin']\").should('be.checked');\ncy.get(\"[value='lettuce']\").check();\ncy.get(\"[value='lettuce']\").should('be.checked');\ncy.get(\"[value='pumpkin']\").should('not.be.checked');\ncy.get(\"[value='cabbage']\").should('be.disabled');",
              "err": {},
              "uuid": "fad8fbdc-c56b-462b-9679-34ad90e7d6d6",
              "parentUUID": "f99f7310-5c40-49ca-892a-2040882fe399",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f62bfc5d-5ad7-4439-bcbd-8d47c0848e02",
            "fad8fbdc-c56b-462b-9679-34ad90e7d6d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2364,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e64f00bf-cf16-4792-b1eb-e38727779230",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\select-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\select-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2dd62373-c12f-4501-b5ca-a9804e69013c",
          "title": "Ineract with dropdown list via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific value via select dropdown list",
              "fullTitle": "Ineract with dropdown list via webdriveruni Select specific value via select dropdown list",
              "timedOut": null,
              "duration": 2542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.webdriveruniversity.com\");\ncy.get('#dropdown-checkboxes-radiobuttons').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'Dropdown-Checkboxes-RadioButtons');\ncy.get('#dropdowm-menu-1').select('c#');\ncy.get('#dropdowm-menu-2').select('testng').should('have.value', 'testng');\ncy.get('#dropdowm-menu-3').select('JQuery').contains('JQuery');\ncy.get('#dropdowm-menu-2').select('maven').should('have.value', 'maven');\ncy.get('#dropdowm-menu-2').select('TestNG').contains('TestNG');",
              "err": {},
              "uuid": "77e29d33-2ad8-4a8a-9d54-708951f5009d",
              "parentUUID": "2dd62373-c12f-4501-b5ca-a9804e69013c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77e29d33-2ad8-4a8a-9d54-708951f5009d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2542,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cb36c78d-32e2-40b8-be03-a148fc275383",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\traversing-elements.js",
      "file": "cypress\\e2e\\webdriver-uni\\traversing-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
          "title": "Traversing DOM elements in Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "children() to get the children of DOM elements",
              "fullTitle": "Traversing DOM elements in Cypress children() to get the children of DOM elements",
              "timedOut": null,
              "duration": 1367,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-breadcrumb').children('.active').should('contain', 'Contact Us');",
              "err": {},
              "uuid": "afbd03a0-f06d-438e-bf69-49d3febb5922",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "closest() to validate the closest ancestor DOM element",
              "fullTitle": "Traversing DOM elements in Cypress closest() to validate the closest ancestor DOM element",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "d2f11163-2738-46f0-b7c7-d4746b14ea87",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "eq() to retrieve a specific element based on index",
              "fullTitle": "Traversing DOM elements in Cypress eq() to retrieve a specific element based on index",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-drinks-list>*').eq(2).should('contain', 'Milk');",
              "err": {},
              "uuid": "f7d7321b-02ad-466b-8555-fb368ac88dae",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter() to retrieve DOM elements that match a specific selector",
              "fullTitle": "Traversing DOM elements in Cypress filter() to retrieve DOM elements that match a specific selector",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.btn-group-toggle>*').filter('.active').should('contain', 'Button-1');",
              "err": {},
              "uuid": "721f0bdc-3ed4-4201-a037-a657ab7025b8",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "find() to retrieve DOM elements of a given selector",
              "fullTitle": "Traversing DOM elements in Cypress find() to retrieve DOM elements of a given selector",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "d88b6773-6ff2-45f6-9616-23d8f72fcdfb",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "first() to retrieve the first DOM element within elements ",
              "fullTitle": "Traversing DOM elements in Cypress first() to retrieve the first DOM element within elements ",
              "timedOut": null,
              "duration": 353,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-table>tbody>tr>td').first().should('contain', 'Andy');",
              "err": {},
              "uuid": "f379306c-d3a6-4a35-a438-6d848fdd907d",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "last() to retrieve the last DOM element within elements",
              "fullTitle": "Traversing DOM elements in Cypress last() to retrieve the last DOM element within elements",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-table>tbody>tr>td').last().should('contain', 'Scott');",
              "err": {},
              "uuid": "45c56e4e-21b1-4b16-9a88-c2e9ba25db19",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "nextAll() to get all of the next sibling DOM elements within elements",
              "fullTitle": "Traversing DOM elements in Cypress nextAll() to get all of the next sibling DOM elements within elements",
              "timedOut": null,
              "duration": 472,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-drinks-list>[id=\"tea\"]').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "a6575081-3ada-4186-ae1b-99cde8e399ae",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "nextUntil() to get all of the next sibling DOM elements within elements until another element",
              "fullTitle": "Traversing DOM elements in Cypress nextUntil() to get all of the next sibling DOM elements within elements until another element",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-drinks-list>[id=\"tea\"]').nextUntil().should('contain', 'Milk');",
              "err": {},
              "uuid": "dd9e8365-ccca-4cbb-9b72-976cafb2844e",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "not() to remove DOM element(s) from the set of elements",
              "fullTitle": "Traversing DOM elements in Cypress not() to remove DOM element(s) from the set of elements",
              "timedOut": null,
              "duration": 406,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-button-states>button').not('.disabled').should('not.have.class', 'disabled');",
              "err": {},
              "uuid": "cab64a48-7427-40e2-8d11-40d13aa4b0f8",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "parent() To get parent DOM element of elements",
              "fullTitle": "Traversing DOM elements in Cypress parent() To get parent DOM element of elements",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-mark').parent().should('contain', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit');\ncy.get('.traversal-mark').parent().should('contain', 'Platea dictumst quisque sagittis purus sit amet volutpat consequat.');",
              "err": {},
              "uuid": "a53692ea-6a9d-4576-8fb6-2363cd98dcb4",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "parents() to get parents DOM element of elements",
              "fullTitle": "Traversing DOM elements in Cypress parents() to get parents DOM element of elements",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "74896918-475b-437e-b5aa-9644ca0d00d3",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prev() to get the previous sibling DOM element within elements",
              "fullTitle": "Traversing DOM elements in Cypress prev() to get the previous sibling DOM element within elements",
              "timedOut": null,
              "duration": 399,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-drinks-list>[id=\"sugar\"]').prev().contains('Espresso');",
              "err": {},
              "uuid": "74c3bedb-49ce-4b9f-aeea-cf4c0ddf857b",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prevAll() to get all previous sibling DOM elements within elements",
              "fullTitle": "Traversing DOM elements in Cypress prevAll() to get all previous sibling DOM elements within elements",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-drinks-list>[id=\"sugar\"]').prevAll().should('have.length', 4);",
              "err": {},
              "uuid": "4292f36f-224c-499e-a725-7ac7137f38d8",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prevUntil() to get all previous sibling DOM elements within elements until other element",
              "fullTitle": "Traversing DOM elements in Cypress prevUntil() to get all previous sibling DOM elements within elements until other element",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#veggie').prevUntil('#fruits').should('have.length', 5);",
              "err": {},
              "uuid": "fe28a4c9-53b5-4be5-9d5b-c33732e3ed55",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "siblings() To get all sibling DOM elements of elements",
              "fullTitle": "Traversing DOM elements in Cypress siblings() To get all sibling DOM elements of elements",
              "timedOut": null,
              "duration": 350,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-button-other-states .active').siblings().should('have.length', 3);",
              "err": {},
              "uuid": "c600186c-3b58-441d-ac4f-a9b3873dd22a",
              "parentUUID": "fca8aec8-81ad-4308-8a9c-b082b3c6afaf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afbd03a0-f06d-438e-bf69-49d3febb5922",
            "d2f11163-2738-46f0-b7c7-d4746b14ea87",
            "f7d7321b-02ad-466b-8555-fb368ac88dae",
            "721f0bdc-3ed4-4201-a037-a657ab7025b8",
            "d88b6773-6ff2-45f6-9616-23d8f72fcdfb",
            "f379306c-d3a6-4a35-a438-6d848fdd907d",
            "45c56e4e-21b1-4b16-9a88-c2e9ba25db19",
            "a6575081-3ada-4186-ae1b-99cde8e399ae",
            "dd9e8365-ccca-4cbb-9b72-976cafb2844e",
            "cab64a48-7427-40e2-8d11-40d13aa4b0f8",
            "a53692ea-6a9d-4576-8fb6-2363cd98dcb4",
            "74896918-475b-437e-b5aa-9644ca0d00d3",
            "74c3bedb-49ce-4b9f-aeea-cf4c0ddf857b",
            "4292f36f-224c-499e-a725-7ac7137f38d8",
            "fe28a4c9-53b5-4be5-9d5b-c33732e3ed55",
            "c600186c-3b58-441d-ac4f-a9b3873dd22a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7131,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bc32722a-eb40-49f3-b4e2-15bbd01083c9",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\upload-file.js",
      "file": "cypress\\e2e\\webdriver-uni\\upload-file.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f8bf1a1-55ca-4a53-af60-5b33dd821bce",
          "title": "Test file upload via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Upload a file ...",
              "fullTitle": "Test file upload via webdriveruni Upload a file ...",
              "timedOut": null,
              "duration": 1594,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#myFile').selectFile(\"cypress/fixtures/kompas.jfif\");\ncy.get('#submit-button').click();\ncy.on('window:alert', str => {\n  expect(str).equal('Your file has now been uploaded!');\n});",
              "err": {},
              "uuid": "d537d987-58e2-4f9e-a59b-420aef496dfb",
              "parentUUID": "9f8bf1a1-55ca-4a53-af60-5b33dd821bce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upload No file...",
              "fullTitle": "Test file upload via webdriveruni Upload No file...",
              "timedOut": null,
              "duration": 627,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#submit-button').click();\ncy.on('window:alert', str => {\n  expect(str).equal('You need to select a file to upload!');\n});",
              "err": {},
              "uuid": "eb2a15c1-70c6-4a77-bcdb-1a1a89fc0f4b",
              "parentUUID": "9f8bf1a1-55ca-4a53-af60-5b33dd821bce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d537d987-58e2-4f9e-a59b-420aef496dfb",
            "eb2a15c1-70c6-4a77-bcdb-1a1a89fc0f4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2221,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f9b2096e-7608-40ef-9300-98b6669efc98",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\1-getting-started\\todo.cy.js",
      "file": "cypress\\e2e\\OLD\\1-getting-started\\todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "55635b1f-6c45-4eb6-b8fd-af09ec9e3483",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 1378,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "0f6ae362-c716-49e9-8f06-1133b3dd32d5",
              "parentUUID": "55635b1f-6c45-4eb6-b8fd-af09ec9e3483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add new todo items",
              "fullTitle": "example to-do app can add new todo items",
              "timedOut": null,
              "duration": 659,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\nconst newItem = 'Feed the cat';\n// Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('[data-test=new-todo]').type(`${newItem}{enter}`);\n// Now that we've typed our new item, let's check that it actually was added to the list.\n// Since it's the newest item, it should exist as the last element in the list.\n// In addition, with the two default items, we should have a total of 3 elements in the list.\n// Since assertions yield the element that was asserted on,\n// we can chain both of these assertions together into a single statement.\ncy.get('.todo-list li').should('have.length', 3).last().should('have.text', newItem);",
              "err": {},
              "uuid": "43b5d515-1a7a-4029-a2f9-a134443fbfaf",
              "parentUUID": "55635b1f-6c45-4eb6-b8fd-af09ec9e3483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can check off an item as completed",
              "fullTitle": "example to-do app can check off an item as completed",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// In addition to using the `get` command to get an element by selector,\n// we can also use the `contains` command to get an element by its contents.\n// However, this will yield the <label>, which is lowest-level element that contains the text.\n// In order to check the item, we'll find the <input> element for this <label>\n// by traversing up the dom to the parent element. From there, we can `find`\n// the child checkbox <input> element and use the `check` command to check it.\ncy.contains('Pay electric bill').parent().find('input[type=checkbox]').check();\n// Now that we've checked the button, we can go ahead and make sure\n// that the list element is now marked as completed.\n// Again we'll use `contains` to find the <label> element and then use the `parents` command\n// to traverse multiple levels up the dom until we find the corresponding <li> element.\n// Once we get that element, we can assert that it has the completed class.\ncy.contains('Pay electric bill').parents('li').should('have.class', 'completed');",
              "err": {},
              "uuid": "d4e491ab-67b3-435d-97d6-dfc03ba4bcbe",
              "parentUUID": "55635b1f-6c45-4eb6-b8fd-af09ec9e3483",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a6c615e4-0a28-4a30-b7c7-491f1efe5816",
              "title": "with a checked task",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can filter for uncompleted tasks",
                  "fullTitle": "example to-do app with a checked task can filter for uncompleted tasks",
                  "timedOut": null,
                  "duration": 451,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We'll click on the \"active\" button in order to\n// display only incomplete items\ncy.contains('Active').click();\n// After filtering, we can assert that there is only the one\n// incomplete item in the list.\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Walk the dog');\n// For good measure, let's also assert that the task we checked off\n// does not exist on the page.\ncy.contains('Pay electric bill').should('not.exist');",
                  "err": {},
                  "uuid": "49ddf524-6f95-4b9b-9586-12dd69ec7565",
                  "parentUUID": "a6c615e4-0a28-4a30-b7c7-491f1efe5816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can filter for completed tasks",
                  "fullTitle": "example to-do app with a checked task can filter for completed tasks",
                  "timedOut": null,
                  "duration": 386,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can perform similar steps as the test above to ensure\n// that only completed tasks are shown\ncy.contains('Completed').click();\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Pay electric bill');\ncy.contains('Walk the dog').should('not.exist');",
                  "err": {},
                  "uuid": "a0a08a43-717c-42b1-9d89-a815638d5ae0",
                  "parentUUID": "a6c615e4-0a28-4a30-b7c7-491f1efe5816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can delete all completed tasks",
                  "fullTitle": "example to-do app with a checked task can delete all completed tasks",
                  "timedOut": null,
                  "duration": 374,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// First, let's click the \"Clear completed\" button\n// `contains` is actually serving two purposes here.\n// First, it's ensuring that the button exists within the dom.\n// This button only appears when at least one task is checked\n// so this command is implicitly verifying that it does exist.\n// Second, it selects the button so we can click it.\ncy.contains('Clear completed').click();\n// Then we can make sure that there is only one element\n// in the list and our element does not exist\ncy.get('.todo-list li').should('have.length', 1).should('not.have.text', 'Pay electric bill');\n// Finally, make sure that the clear button no longer exists.\ncy.contains('Clear completed').should('not.exist');",
                  "err": {},
                  "uuid": "e82d5467-deab-487d-822d-7c019de9a7a4",
                  "parentUUID": "a6c615e4-0a28-4a30-b7c7-491f1efe5816",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49ddf524-6f95-4b9b-9586-12dd69ec7565",
                "a0a08a43-717c-42b1-9d89-a815638d5ae0",
                "e82d5467-deab-487d-822d-7c019de9a7a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1211,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "0f6ae362-c716-49e9-8f06-1133b3dd32d5",
            "43b5d515-1a7a-4029-a2f9-a134443fbfaf",
            "d4e491ab-67b3-435d-97d6-dfc03ba4bcbe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2446,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "699bddf5-7b3e-4693-ae31-822f2620cdf6",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\actions.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4566,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com')\n// .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}')\n// .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}')\n// Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n// Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "7ad1d245-cb03-443c-a7b2-bcccfe95bf80",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "72678444-ae19-4fac-923f-011040abe4dc",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "93ed3d3c-4443-4ade-b1ae-9a9edd8e65cd",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 675,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "ce9aeff3-586a-4e03-b96d-40b4655aba84",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 510,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "dd63ff12-d051-48f5-bba4-b831a99fd8cc",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2254,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n});\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "ddb66ae4-eab6-4e42-a90a-0f7b63742b62",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "a101184f-555a-46e6-9bed-5a85dd7c901a",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "8ed3ca25-bd6d-4cae-aed5-143e4bf5da30",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 986,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "dda2fa9b-99ed-46a3-a318-4bc1254953a3",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1063,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "22df6393-5e51-423a-9a72-487312f2aa63",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas'])\n// when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas')\n// can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "83b6d86b-ebdf-4d43-8cbd-03514b4f6bd9",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "ec92b4ca-797f-4a5e-bfc7-6b2ba43372a7",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "56df48c2-110a-4150-9537-9a296728babc",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2304,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n});\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "d63dcb33-6fdf-43b9-b720-8ca7effd999a",
              "parentUUID": "b58cb222-ce01-4014-97a9-52ab5378cf9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ad1d245-cb03-443c-a7b2-bcccfe95bf80",
            "72678444-ae19-4fac-923f-011040abe4dc",
            "93ed3d3c-4443-4ade-b1ae-9a9edd8e65cd",
            "ce9aeff3-586a-4e03-b96d-40b4655aba84",
            "dd63ff12-d051-48f5-bba4-b831a99fd8cc",
            "ddb66ae4-eab6-4e42-a90a-0f7b63742b62",
            "a101184f-555a-46e6-9bed-5a85dd7c901a",
            "8ed3ca25-bd6d-4cae-aed5-143e4bf5da30",
            "dda2fa9b-99ed-46a3-a318-4bc1254953a3",
            "22df6393-5e51-423a-9a72-487312f2aa63",
            "83b6d86b-ebdf-4d43-8cbd-03514b4f6bd9",
            "ec92b4ca-797f-4a5e-bfc7-6b2ba43372a7",
            "56df48c2-110a-4150-9537-9a296728babc",
            "d63dcb33-6fdf-43b9-b720-8ca7effd999a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "63a112b6-0c4f-4f87-b46e-e1663dee1cab",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\aliasing.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\aliasing.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8d1e4b7-7c52-403d-8d87-c36d4cf5ac5b",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 2334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn');\n// when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "17b8f797-105b-48b8-a3af-722ffa9b86c3",
              "parentUUID": "b8d1e4b7-7c52-403d-8d87-c36d4cf5ac5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "1316599a-34dc-49ab-a9a6-13f6c0bc372f",
              "parentUUID": "b8d1e4b7-7c52-403d-8d87-c36d4cf5ac5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17b8f797-105b-48b8-a3af-722ffa9b86c3",
            "1316599a-34dc-49ab-a9a6-13f6c0bc372f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3518,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1bbb12aa-06b5-40c1-bb99-8633849fd1ab",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\assertions.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d4501cd3-9df7-4fbd-afe4-e77ea7d0afa3",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "562146d7-7f4f-46f2-aed7-1ad28125e076",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 862,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first()\n// checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content')\n// chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td')\n// to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i);\n// a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last')\n// finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible');\n// for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "2a9ceed0-3f3d-4138-ad22-7833825db779",
                  "parentUUID": "562146d7-7f4f-46f2-aed7-1ad28125e076",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 261,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "69642d53-40fb-4b4a-8e7e-bb6f97e2c638",
                  "parentUUID": "562146d7-7f4f-46f2-aed7-1ad28125e076",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2a9ceed0-3f3d-4138-ad22-7833825db779",
                "69642d53-40fb-4b4a-8e7e-bb6f97e2c638"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1123,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c58abf6b-3861-4cad-870f-a7aad42b4696",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 230,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n});\n// matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "5854edf3-d600-4eb2-b5f4-db659b89b6b4",
                  "parentUUID": "c58abf6b-3861-4cad-870f-a7aad42b4696",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 212,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  const texts = $p.map((i, el) => Cypress.$(el).text());\n  // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get();\n  // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3);\n  // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "99498f65-2628-4068-8e0d-205f46bd8924",
                  "parentUUID": "c58abf6b-3861-4cad-870f-a7aad42b4696",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 212,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div')\n// .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n})\n// .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "fddea47c-1986-4886-b39f-5e36c435ae04",
                  "parentUUID": "c58abf6b-3861-4cad-870f-a7aad42b4696",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 190,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "2c13c310-2391-4627-a57f-9a15e3e50c45",
                  "parentUUID": "c58abf6b-3861-4cad-870f-a7aad42b4696",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 221,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "69673101-aa8a-45f1-a38b-10c55535ee3b",
                  "parentUUID": "c58abf6b-3861-4cad-870f-a7aad42b4696",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 231,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "e1b6a0fb-cbef-4598-9b63-a092ce8d00d8",
                  "parentUUID": "c58abf6b-3861-4cad-870f-a7aad42b4696",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1672,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "3483655e-4101-494b-bcf8-641422f2c895",
                  "parentUUID": "c58abf6b-3861-4cad-870f-a7aad42b4696",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5854edf3-d600-4eb2-b5f4-db659b89b6b4",
                "99498f65-2628-4068-8e0d-205f46bd8924",
                "fddea47c-1986-4886-b39f-5e36c435ae04",
                "2c13c310-2391-4627-a57f-9a15e3e50c45",
                "69673101-aa8a-45f1-a38b-10c55535ee3b",
                "e1b6a0fb-cbef-4598-9b63-a092ce8d00d8",
                "3483655e-4101-494b-bcf8-641422f2c895"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2968,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "09fc9f43-8f8f-433b-9216-5559e6a70e8a",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\connectors.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\connectors.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2f3c6272-4bb3-46be-a94e-43143aeb8590",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 723,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "5f456f9d-7b81-4473-9de7-766420a76431",
              "parentUUID": "2f3c6272-4bb3-46be-a94e-43143aeb8590",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li')\n// calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "b5cc2805-a928-47d5-a9cd-efa28202936e",
              "parentUUID": "2f3c6272-4bb3-46be-a94e-43143aeb8590",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\ncy.get('.connectors-div').should('be.hidden');\n// https://on.cypress.io/invoke\n// call the jquery method 'show' on the 'div.container'\ncy.get('.connectors-div').invoke('show');\ncy.get('.connectors-div').should('be.visible');",
              "err": {},
              "uuid": "142a637f-7dbb-477c-8434-d5ca9d4661f7",
              "parentUUID": "2f3c6272-4bb3-46be-a94e-43143aeb8590",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "37943f30-3e0d-4e0e-97d5-56fa8be0be73",
              "parentUUID": "2f3c6272-4bb3-46be-a94e-43143aeb8590",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f7b0a3d2-abb8-4b6e-aff5-50a95596268a",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 226,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "6138c425-8f14-475d-9ea1-272bb99fd2ff",
                  "parentUUID": "f7b0a3d2-abb8-4b6e-aff5-50a95596268a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 223,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "746e98c9-3426-4cc8-bfbb-60b3ceb90382",
                  "parentUUID": "f7b0a3d2-abb8-4b6e-aff5-50a95596268a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 187,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "3f821de3-f9e9-4313-a9e6-7b8738c0cd9d",
                  "parentUUID": "f7b0a3d2-abb8-4b6e-aff5-50a95596268a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 194,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "56169767-5858-4dae-87cf-0ee8574d65eb",
                  "parentUUID": "f7b0a3d2-abb8-4b6e-aff5-50a95596268a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6138c425-8f14-475d-9ea1-272bb99fd2ff",
                "746e98c9-3426-4cc8-bfbb-60b3ceb90382",
                "3f821de3-f9e9-4313-a9e6-7b8738c0cd9d",
                "56169767-5858-4dae-87cf-0ee8574d65eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 830,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "5f456f9d-7b81-4473-9de7-766420a76431",
            "b5cc2805-a928-47d5-a9cd-efa28202936e",
            "142a637f-7dbb-477c-8434-d5ca9d4661f7",
            "37943f30-3e0d-4e0e-97d5-56fa8be0be73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1423,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "367afa1d-eeba-41c8-b4e4-52def296f278",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\cookies.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\cookies.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "957d196f-4fae-4c60-b9d9-3d4442d0341d",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 856,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "3fd9ef9e-28d4-43cb-b4f8-69b5812bad8c",
              "parentUUID": "957d196f-4fae-4c60-b9d9-3d4442d0341d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies for the current domain",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies for the current domain",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "22beae63-3eb5-4133-9129-b7167b0dd888",
              "parentUUID": "957d196f-4fae-4c60-b9d9-3d4442d0341d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllCookies() - get all browser cookies",
              "fullTitle": "Cookies cy.getAllCookies() - get all browser cookies",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', {\n  domain: '.example.com'\n});\n// cy.getAllCookies() yields an array of cookies\ncy.getAllCookies().should('have.length', 2).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'key');\n  expect(cookies[0]).to.have.property('value', 'value');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n  expect(cookies[1]).to.have.property('name', 'key');\n  expect(cookies[1]).to.have.property('value', 'value');\n  expect(cookies[1]).to.have.property('httpOnly', false);\n  expect(cookies[1]).to.have.property('secure', false);\n  expect(cookies[1]).to.have.property('domain', '.example.com');\n  expect(cookies[1]).to.have.property('path');\n});",
              "err": {},
              "uuid": "d1008bd3-13cf-4dbf-ac5d-3c952fab36d7",
              "parentUUID": "957d196f-4fae-4c60-b9d9-3d4442d0341d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "4a7b0c23-c7dc-44be-8acd-63761775c4a5",
              "parentUUID": "957d196f-4fae-4c60-b9d9-3d4442d0341d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "2ad8d0bd-0d25-48d2-8986-3938c285d42c",
              "parentUUID": "957d196f-4fae-4c60-b9d9-3d4442d0341d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies for the current domain",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies for the current domain",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "697262d7-b2d2-49fb-a3f5-dfaa87227e57",
              "parentUUID": "957d196f-4fae-4c60-b9d9-3d4442d0341d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllCookies() - clear all browser cookies",
              "fullTitle": "Cookies cy.clearAllCookies() - clear all browser cookies",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', {\n  domain: '.example.com'\n});\ncy.getAllCookies().should('have.length', 2);\n// cy.clearAllCookies() yields null\ncy.clearAllCookies();\ncy.getAllCookies().should('be.empty');",
              "err": {},
              "uuid": "cfb242a2-d3cb-431e-aa53-e9b5b4dab931",
              "parentUUID": "957d196f-4fae-4c60-b9d9-3d4442d0341d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fd9ef9e-28d4-43cb-b4f8-69b5812bad8c",
            "22beae63-3eb5-4133-9129-b7167b0dd888",
            "d1008bd3-13cf-4dbf-ac5d-3c952fab36d7",
            "4a7b0c23-c7dc-44be-8acd-63761775c4a5",
            "2ad8d0bd-0d25-48d2-8986-3938c285d42c",
            "697262d7-b2d2-49fb-a3f5-dfaa87227e57",
            "cfb242a2-d3cb-431e-aa53-e9b5b4dab931"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2586,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0981ffa8-d2eb-4724-aac9-985f7c552d4d",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\cypress_api.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f298da52-d34b-4019-8650-344d5989c1df",
          "title": "Cypress APIs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4d5b48aa-681c-4a47-802a-6b9f950f1240",
              "title": "Cypress.Commands",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".add() - create a custom command",
                  "fullTitle": "Cypress APIs Cypress.Commands .add() - create a custom command",
                  "timedOut": null,
                  "duration": 767,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log';\n  // log the subject to the console\n  console[method]('The subject is', subject);\n  // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {\n  // subject is still $button\n});",
                  "err": {},
                  "uuid": "1054bede-bb71-407e-8485-283b04a7692a",
                  "parentUUID": "4d5b48aa-681c-4a47-802a-6b9f950f1240",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1054bede-bb71-407e-8485-283b04a7692a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 767,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "996aeee2-f5a6-4a75-b106-7441578e5cfb",
              "title": "Cypress.Cookies",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".debug() - enable or disable debugging",
                  "fullTitle": "Cypress APIs Cypress.Cookies .debug() - enable or disable debugging",
                  "timedOut": null,
                  "duration": 285,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
                  "err": {},
                  "uuid": "49508bad-95c0-45f8-85dc-ca52d8d8e48e",
                  "parentUUID": "996aeee2-f5a6-4a75-b106-7441578e5cfb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49508bad-95c0-45f8-85dc-ca52d8d8e48e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 285,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4dd67d29-18fc-457a-83ec-00140d501e0c",
              "title": "Cypress.arch",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get CPU architecture name of underlying OS",
                  "fullTitle": "Cypress APIs Cypress.arch Get CPU architecture name of underlying OS",
                  "timedOut": null,
                  "duration": 193,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
                  "err": {},
                  "uuid": "25a23103-4dd0-42ed-9d8d-ac303db49790",
                  "parentUUID": "4dd67d29-18fc-457a-83ec-00140d501e0c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25a23103-4dd0-42ed-9d8d-ac303db49790"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 193,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "08ca0647-ef3f-4bee-b8b9-5a40d17604a8",
              "title": "Cypress.config()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get and set configuration options",
                  "fullTitle": "Cypress APIs Cypress.config() Get and set configuration options",
                  "timedOut": null,
                  "duration": 461,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
                  "err": {
                    "message": "AssertionError: expected { Object (projectId, setupNodeEvents, ...) } to have property 'baseUrl' of null, but got 'https://www.webdriveruniversity.com'",
                    "estack": "AssertionError: expected { Object (projectId, setupNodeEvents, ...) } to have property 'baseUrl' of null, but got 'https://www.webdriveruniversity.com'\n    at Context.eval (webpack://cypress-automation-framework/./cypress/e2e/OLD/2-advanced-examples/cypress_api.cy.js:77:31)",
                    "diff": null
                  },
                  "uuid": "ca53b448-19e6-464f-b8b5-1d38861331a2",
                  "parentUUID": "08ca0647-ef3f-4bee-b8b9-5a40d17604a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "ca53b448-19e6-464f-b8b5-1d38861331a2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 461,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "72c1ca59-85e2-44e3-9999-2bbb8a7ffb76",
              "title": "Cypress.dom",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".isHidden() - determine if a DOM element is hidden",
                  "fullTitle": "Cypress APIs Cypress.dom .isHidden() - determine if a DOM element is hidden",
                  "timedOut": null,
                  "duration": 232,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
                  "err": {},
                  "uuid": "61be0477-05f1-47d2-9985-33ea1cd46635",
                  "parentUUID": "72c1ca59-85e2-44e3-9999-2bbb8a7ffb76",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "61be0477-05f1-47d2-9985-33ea1cd46635"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 232,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2eab1622-f147-4bec-9ce7-a6b2af1aaac7",
              "title": "Cypress.env()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get environment variables",
                  "fullTitle": "Cypress APIs Cypress.env() Get environment variables",
                  "timedOut": null,
                  "duration": 204,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
                  "err": {},
                  "uuid": "8945149e-3a6f-4191-89a6-e94433cc7947",
                  "parentUUID": "2eab1622-f147-4bec-9ce7-a6b2af1aaac7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8945149e-3a6f-4191-89a6-e94433cc7947"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "33c0d5ba-e3f2-44f0-9fd7-2b55fe85a128",
              "title": "Cypress.log",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Control what is printed to the Command Log",
                  "fullTitle": "Cypress APIs Cypress.log Control what is printed to the Command Log",
                  "timedOut": null,
                  "duration": 204,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/cypress-log",
                  "err": {},
                  "uuid": "84834bde-10ac-4f9a-b6b5-05eb917b53cf",
                  "parentUUID": "33c0d5ba-e3f2-44f0-9fd7-2b55fe85a128",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "84834bde-10ac-4f9a-b6b5-05eb917b53cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "664984ac-694c-43e1-b2fb-e916413c9d31",
              "title": "Cypress.platform",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get underlying OS name",
                  "fullTitle": "Cypress APIs Cypress.platform Get underlying OS name",
                  "timedOut": null,
                  "duration": 212,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
                  "err": {},
                  "uuid": "97ff2a89-da01-4170-a24b-5c4cab62c548",
                  "parentUUID": "664984ac-694c-43e1-b2fb-e916413c9d31",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97ff2a89-da01-4170-a24b-5c4cab62c548"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 212,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "431c6dcd-afa0-45a2-968e-8f8adf3c2a02",
              "title": "Cypress.version",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current version of Cypress being run",
                  "fullTitle": "Cypress APIs Cypress.version Get current version of Cypress being run",
                  "timedOut": null,
                  "duration": 191,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
                  "err": {},
                  "uuid": "bae528ed-5140-48a3-8f02-ab82fe414705",
                  "parentUUID": "431c6dcd-afa0-45a2-968e-8f8adf3c2a02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bae528ed-5140-48a3-8f02-ab82fe414705"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 191,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f27545da-b793-4872-a1f2-3b3c2744bbfe",
              "title": "Cypress.spec",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current spec information",
                  "fullTitle": "Cypress APIs Cypress.spec Get current spec information",
                  "timedOut": null,
                  "duration": 247,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
                  "err": {},
                  "uuid": "d689d53c-e35a-4865-9c42-4cd3113b5d47",
                  "parentUUID": "f27545da-b793-4872-a1f2-3b3c2744bbfe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d689d53c-e35a-4865-9c42-4cd3113b5d47"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 247,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8093aac8-94b5-493a-b423-44f5ed4e6a8e",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\location.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\location.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad7436f9-27fa-4da9-bc71-44c153589942",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 1033,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "4984b64f-308e-4818-b695-3a2200b48cd2",
              "parentUUID": "ad7436f9-27fa-4da9-bc71-44c153589942",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "7230ee5d-3d52-45ab-9ab8-0244e0c7220a",
              "parentUUID": "ad7436f9-27fa-4da9-bc71-44c153589942",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "c189580a-b54d-4c71-b10a-8b017ab36437",
              "parentUUID": "ad7436f9-27fa-4da9-bc71-44c153589942",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4984b64f-308e-4818-b695-3a2200b48cd2",
            "7230ee5d-3d52-45ab-9ab8-0244e0c7220a",
            "c189580a-b54d-4c71-b10a-8b017ab36437"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1457,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "74d2dea5-ff8d-41a6-9559-5c3425e4cc84",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\misc.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\misc.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bf84cc2-e230-40c2-adad-7fc68986c40f",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(() => {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end();\n  // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "04cda456-ab48-47ca-9b66-8d06984cca32",
              "parentUUID": "2bf84cc2-e230-40c2-adad-7fc68986c40f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`);\n// on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n}\n// cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec(`print ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n} else {\n  cy.exec(`cat ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "31241eca-3e54-4eed-ac22-a597b0f8ff92",
              "parentUUID": "2bf84cc2-e230-40c2-adad-7fc68986c40f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "619012ef-6e73-46c6-8110-24c42cc0b77e",
              "parentUUID": "2bf84cc2-e230-40c2-adad-7fc68986c40f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "28c3e894-542f-443e-9745-5d5ede3c6b42",
              "parentUUID": "2bf84cc2-e230-40c2-adad-7fc68986c40f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "836a33a6-196b-4d4b-804d-392df028203e",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1909,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "06be63d1-fc3c-42f6-9953-822569d6d3da",
                  "parentUUID": "836a33a6-196b-4d4b-804d-392df028203e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 199,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "b2b81bfa-5c9c-4e78-b075-a008ee24253f",
                  "parentUUID": "836a33a6-196b-4d4b-804d-392df028203e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06be63d1-fc3c-42f6-9953-822569d6d3da",
                "b2b81bfa-5c9c-4e78-b075-a008ee24253f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2108,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "04cda456-ab48-47ca-9b66-8d06984cca32",
            "31241eca-3e54-4eed-ac22-a597b0f8ff92",
            "619012ef-6e73-46c6-8110-24c42cc0b77e",
            "28c3e894-542f-443e-9745-5d5ede3c6b42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1829,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "19f468a1-8509-46dc-8fd5-94525703023f",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\navigation.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\navigation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2731b3e8-4388-40fa-9bbe-4fd201da30f8",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 1784,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation');\n// clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation');\n// clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "404ac1d4-0417-4634-b80e-9f82d224ec72",
              "parentUUID": "2731b3e8-4388-40fa-9bbe-4fd201da30f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 714,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload();\n// reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "e8a0ed03-d71b-4fd5-9f3e-13e79d24cfdf",
              "parentUUID": "2731b3e8-4388-40fa-9bbe-4fd201da30f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 598,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "d7ae5dfb-9bb3-407f-9bd1-934fc9d0b9ea",
              "parentUUID": "2731b3e8-4388-40fa-9bbe-4fd201da30f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "404ac1d4-0417-4634-b80e-9f82d224ec72",
            "e8a0ed03-d71b-4fd5-9f3e-13e79d24cfdf",
            "d7ae5dfb-9bb3-407f-9bd1-934fc9d0b9ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "537a245e-f099-4247-955d-c3e59c32d819",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\network_requests.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\network_requests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fc57d8de-27bb-4fa0-9755-52114e07614a",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1473,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n  expect(response.status).to.eq(200);\n  // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "36d1f69a-76bc-4c86-a78b-6243b04ac649",
              "parentUUID": "fc57d8de-27bb-4fa0-9755-52114e07614a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 854,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "fe7dcc7c-ff4d-4d96-85e4-b61e02d78a5d",
              "parentUUID": "fc57d8de-27bb-4fa0-9755-52114e07614a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "25a4ba79-497a-4187-8827-ffab74f9cd67",
              "parentUUID": "fc57d8de-27bb-4fa0-9755-52114e07614a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 753,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(user => {\n  expect(user).property('id').to.be.a('number');\n  // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n})\n// note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(response => {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  });\n  // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100);\n  // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "61eb2f21-4b3a-4523-ac63-6b753ac33361",
              "parentUUID": "fc57d8de-27bb-4fa0-9755-52114e07614a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 764,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "c30571cd-d1f1-48ed-928f-80c9eb09b44e",
              "parentUUID": "fc57d8de-27bb-4fa0-9755-52114e07614a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1893,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nlet message = 'whoa, this comment does not exist';\n// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);\n// Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment');\n// we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(({\n  request,\n  response\n}) => {\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n});\n// Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment');\n// we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment');\n// our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "c9b24fa1-0b85-4bbd-be31-a54e59c4d6e0",
              "parentUUID": "fc57d8de-27bb-4fa0-9755-52114e07614a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36d1f69a-76bc-4c86-a78b-6243b04ac649",
            "fe7dcc7c-ff4d-4d96-85e4-b61e02d78a5d",
            "25a4ba79-497a-4187-8827-ffab74f9cd67",
            "61eb2f21-4b3a-4523-ac63-6b753ac33361",
            "c30571cd-d1f1-48ed-928f-80c9eb09b44e",
            "c9b24fa1-0b85-4bbd-be31-a54e59c4d6e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "24bbb191-ec46-4fe6-8012-b6aaa81ba4f9",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\querying.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\querying.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "635a7f27-dc88-4462-84d0-5dfeb689aeb7",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 735,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button');\n//              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example');\n// 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example');\n// or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static');\n// or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "ccf4a792-c104-470a-bfa8-473290ab0ede",
              "parentUUID": "635a7f27-dc88-4462-84d0-5dfeb689aeb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third');\n// we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first');\n// passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "3a38d60e-ea83-4242-9259-ba68df782f0f",
              "parentUUID": "635a7f27-dc88-4462-84d0-5dfeb689aeb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(() => {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "2d2a6220-9cfb-41be-8c84-d4817d5dc373",
              "parentUUID": "635a7f27-dc88-4462-84d0-5dfeb689aeb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "e94f7912-2d1a-4a55-ada2-b732cc9d644a",
              "parentUUID": "635a7f27-dc88-4462-84d0-5dfeb689aeb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 858,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n  // Worst - too generic, no context\n  cy.get('button').click();\n  // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click();\n  // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click();\n  // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click();\n  // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click();\n  // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click();\n  // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "d218954b-4546-46ec-b951-31b19be77dd7",
              "parentUUID": "635a7f27-dc88-4462-84d0-5dfeb689aeb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ccf4a792-c104-470a-bfa8-473290ab0ede",
            "3a38d60e-ea83-4242-9259-ba68df782f0f",
            "2d2a6220-9cfb-41be-8c84-d4817d5dc373",
            "e94f7912-2d1a-4a55-ada2-b732cc9d644a",
            "d218954b-4546-46ec-b951-31b19be77dd7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2272,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "55fcd3fe-8214-45da-a78f-4623fecb7f0b",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c0e571f-a18d-48f2-971b-86047ba33588",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 670,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  foo() {}\n};\nconst spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "4448eaee-5efc-4b46-a88c-9d56fedd933e",
              "parentUUID": "5c0e571f-a18d-48f2-971b-86047ba33588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2526,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(() => {\n  obj.foo('first');\n}, 500);\nsetTimeout(() => {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "fa23f13d-a50c-40b8-b202-fc1e0204f89f",
              "parentUUID": "5c0e571f-a18d-48f2-971b-86047ba33588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nconst stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "779afb85-2d68-421f-a7a3-aa99533fb450",
              "parentUUID": "5c0e571f-a18d-48f2-971b-86047ba33588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "e28f375a-0f09-48f3-b1ca-48eb3b6d6f19",
              "parentUUID": "5c0e571f-a18d-48f2-971b-86047ba33588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 369,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "87210f92-6d6e-4af6-a4c4-2e659e934697",
              "parentUUID": "5c0e571f-a18d-48f2-971b-86047ba33588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet(name) {\n    return `Hello, ${name}!`;\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi');\nexpect(() => greeter.greet(42)).to.throw('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice;\n// non-matched calls goes the actual method\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "f448aace-042e-4dfa-928d-348dd3a1c45e",
              "parentUUID": "5c0e571f-a18d-48f2-971b-86047ba33588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add(a, b) {\n    return a + b;\n  }\n};\nconst spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5);\n// if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3);\n// let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number);\n// alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3));\n// match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3);\n// match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match.in([1, 2, 3]), 3);\n/**\n * Returns true if the given number is even\n * @param {number} x\n */\nconst isEven = x => x % 2 === 0;\n// expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isGreaterThan = limit => x => x > limit;\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isLessThan = limit => x => x < limit;\n// you can combine several matchers using \"and\", \"or\"\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3)));\n// matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3));\n// you can alias matchers for shorter test code\nconst {\n  match: M\n} = Cypress.sinon;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "2e61c09c-401b-49a7-8a1e-b4032a21f250",
              "parentUUID": "5c0e571f-a18d-48f2-971b-86047ba33588",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4448eaee-5efc-4b46-a88c-9d56fedd933e",
            "fa23f13d-a50c-40b8-b202-fc1e0204f89f",
            "779afb85-2d68-421f-a7a3-aa99533fb450",
            "e28f375a-0f09-48f3-b1ca-48eb3b6d6f19",
            "87210f92-6d6e-4af6-a4c4-2e659e934697",
            "f448aace-042e-4dfa-928d-348dd3a1c45e",
            "2e61c09c-401b-49a7-8a1e-b4032a21f250"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4158,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "adbb7bf5-4e42-4de7-ab75-43101218558e",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\storage.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\storage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee8ba868-cea4-4200-a530-6b2b87b89b7b",
          "title": "Local Storage / Session Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in localStorage for the current origin",
              "fullTitle": "Local Storage / Session Storage cy.clearLocalStorage() - clear all data in localStorage for the current origin",
              "timedOut": null,
              "duration": 1114,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.be.null;\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear key matching string in localStorage\ncy.clearLocalStorage('prop1').should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear keys matching regex in localStorage\ncy.clearLocalStorage(/prop1|2/).should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "362904b5-d7e2-4d63-b21c-b09142bdb362",
              "parentUUID": "ee8ba868-cea4-4200-a530-6b2b87b89b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllLocalStorage() - get all data in localStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.getAllLocalStorage() - get all data in localStorage for all origins",
              "timedOut": null,
              "duration": 310,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getalllocalstorage\ncy.get('.ls-btn').click();\n// getAllLocalStorage() yields a map of origins to localStorage values\ncy.getAllLocalStorage().should(storageMap => {\n  expect(storageMap).to.deep.equal({\n    // other origins will also be present if localStorage is set on them\n    'https://example.cypress.io': {\n      'prop1': 'red',\n      'prop2': 'blue',\n      'prop3': 'magenta'\n    }\n  });\n});",
              "err": {},
              "uuid": "a7e1f1a2-d354-463b-9831-3b21b4b1dd28",
              "parentUUID": "ee8ba868-cea4-4200-a530-6b2b87b89b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllLocalStorage() - clear all data in localStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.clearAllLocalStorage() - clear all data in localStorage for all origins",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearalllocalstorage\ncy.get('.ls-btn').click();\n// clearAllLocalStorage() yields null\ncy.clearAllLocalStorage().should(() => {\n  expect(sessionStorage.getItem('prop1')).to.be.null;\n  expect(sessionStorage.getItem('prop2')).to.be.null;\n  expect(sessionStorage.getItem('prop3')).to.be.null;\n});",
              "err": {},
              "uuid": "eacd037d-363d-4f2c-9f86-98aaccd0832f",
              "parentUUID": "ee8ba868-cea4-4200-a530-6b2b87b89b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllSessionStorage() - get all data in sessionStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.getAllSessionStorage() - get all data in sessionStorage for all origins",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getallsessionstorage\ncy.get('.ls-btn').click();\n// getAllSessionStorage() yields a map of origins to sessionStorage values\ncy.getAllSessionStorage().should(storageMap => {\n  expect(storageMap).to.deep.equal({\n    // other origins will also be present if sessionStorage is set on them\n    'https://example.cypress.io': {\n      'prop4': 'cyan',\n      'prop5': 'yellow',\n      'prop6': 'black'\n    }\n  });\n});",
              "err": {},
              "uuid": "88007c95-b6d8-4c15-931a-145438afdad4",
              "parentUUID": "ee8ba868-cea4-4200-a530-6b2b87b89b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearallsessionstorage\ncy.get('.ls-btn').click();\n// clearAllSessionStorage() yields null\ncy.clearAllSessionStorage().should(() => {\n  expect(sessionStorage.getItem('prop4')).to.be.null;\n  expect(sessionStorage.getItem('prop5')).to.be.null;\n  expect(sessionStorage.getItem('prop6')).to.be.null;\n});",
              "err": {},
              "uuid": "33dbcc39-c435-46eb-9ef7-5f9d425243cd",
              "parentUUID": "ee8ba868-cea4-4200-a530-6b2b87b89b7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "362904b5-d7e2-4d63-b21c-b09142bdb362",
            "a7e1f1a2-d354-463b-9831-3b21b4b1dd28",
            "eacd037d-363d-4f2c-9f86-98aaccd0832f",
            "88007c95-b6d8-4c15-931a-145438afdad4",
            "33dbcc39-c435-46eb-9ef7-5f9d425243cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "24f433fe-116c-40f4-8706-87b378936677",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\traversal.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\traversal.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 790,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "1131cc5b-2cc9-4dc8-b6ea-65b10344a40e",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 265,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "a9bc991d-d5b3-417a-817b-b41572a9d8ac",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "c2f01f47-8d63-48d5-bb5e-4d67d6f553dd",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "538a5634-c560-4487-bf68-3844e650b118",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 344,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "c6e868a7-d994-44a1-b933-5ce98ec7d5b6",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "e8c91fb5-4831-416e-b5ef-c4a7d5d6b491",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 385,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "5fabf11c-5548-4ffa-a7d4-8a44dd304df2",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 344,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "00edfeb1-0683-4a97-a561-744d54356781",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 602,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "9bfb6baf-6c83-4206-a2e6-a28918a39230",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "4ce06538-cffd-4520-9629-dabcb2f31745",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "ab826c5c-72de-4f02-956b-4ce6e258cc81",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "2c960b44-9b7b-490b-beef-8d404d690182",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "9024972a-7deb-4a18-878a-2c07c0df2a68",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "b4fdf770-9096-45f3-a465-ab4e311ff7b3",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "753509e0-a96b-46ac-bcb9-065f132e2c39",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "1f05698b-38e4-40ab-8434-d36a90f8e141",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "ece93f42-6040-4217-95ab-d0995487a021",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "b5abf90c-054b-4d14-b2da-1b11d50d2b2f",
              "parentUUID": "e7b7a9c3-2fe5-4d57-80c7-5339b25ac888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1131cc5b-2cc9-4dc8-b6ea-65b10344a40e",
            "a9bc991d-d5b3-417a-817b-b41572a9d8ac",
            "c2f01f47-8d63-48d5-bb5e-4d67d6f553dd",
            "538a5634-c560-4487-bf68-3844e650b118",
            "c6e868a7-d994-44a1-b933-5ce98ec7d5b6",
            "e8c91fb5-4831-416e-b5ef-c4a7d5d6b491",
            "5fabf11c-5548-4ffa-a7d4-8a44dd304df2",
            "00edfeb1-0683-4a97-a561-744d54356781",
            "9bfb6baf-6c83-4206-a2e6-a28918a39230",
            "4ce06538-cffd-4520-9629-dabcb2f31745",
            "ab826c5c-72de-4f02-956b-4ce6e258cc81",
            "2c960b44-9b7b-490b-beef-8d404d690182",
            "9024972a-7deb-4a18-878a-2c07c0df2a68",
            "b4fdf770-9096-45f3-a465-ab4e311ff7b3",
            "753509e0-a96b-46ac-bcb9-065f132e2c39",
            "1f05698b-38e4-40ab-8434-d36a90f8e141",
            "ece93f42-6040-4217-95ab-d0995487a021",
            "b5abf90c-054b-4d14-b2da-1b11d50d2b2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5533,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d237e7fb-77e4-4907-a91f-8fe7a34dccb9",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\utilities.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\utilities.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a592dd59-7a00-49fe-8fac-29500b7a9f46",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1462,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  let ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "86c80b6e-072a-4566-8f37-e47fb5eaf08e",
              "parentUUID": "a592dd59-7a00-49fe-8fac-29500b7a9f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 1201,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nlet $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "340724fc-5784-48d5-b4fc-7512af79ad26",
              "parentUUID": "a592dd59-7a00-49fe-8fac-29500b7a9f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 609,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then($div => {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n    // create an <img> element and set its src to the dataUrl\n    let img = Cypress.$('<img />', {\n      src: dataUrl\n    });\n    // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "2233c754-a7e6-461c-a50c-b1d08be9701f",
              "parentUUID": "a592dd59-7a00-49fe-8fac-29500b7a9f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nlet matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.false;\n// ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.true;\n// whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "193a0cce-0157-4c35-a38c-e15c3ecb592c",
              "parentUUID": "a592dd59-7a00-49fe-8fac-29500b7a9f46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nlet waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      // set waited to true\n      waited = true;\n      // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(() => {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "6086ee9a-e56a-41b6-b1b6-7c92e9738a93",
              "parentUUID": "a592dd59-7a00-49fe-8fac-29500b7a9f46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86c80b6e-072a-4566-8f37-e47fb5eaf08e",
            "340724fc-5784-48d5-b4fc-7512af79ad26",
            "2233c754-a7e6-461c-a50c-b1d08be9701f",
            "193a0cce-0157-4c35-a38c-e15c3ecb592c",
            "6086ee9a-e56a-41b6-b1b6-7c92e9738a93"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4656,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b6dfec31-b7e9-4467-9110-3df2da3f14cf",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\viewport.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\viewport.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9954f118-f36b-49dd-83e3-f85b7ceb4e66",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3719,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480);\n// the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible');\n// lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999);\n// cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200);\n// cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200);\n// The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.config.{js|ts})",
              "err": {},
              "uuid": "5b15fb13-7e65-4962-9599-0818bbb4a884",
              "parentUUID": "9954f118-f36b-49dd-83e3-f85b7ceb4e66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b15fb13-7e65-4962-9599-0818bbb4a884"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3719,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8ac06439-63d2-44db-bf8d-b5997b6f2e89",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\waiting.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\waiting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c858bf1e-7740-4c5c-874a-5c50cd1291c3",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 4995,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "f2b8fb31-b681-418e-be37-544224481beb",
              "parentUUID": "c858bf1e-7740-4c5c-874a-5c50cd1291c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 727,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "6cbdd98a-6edc-4a98-8d3d-e871d203db14",
              "parentUUID": "c858bf1e-7740-4c5c-874a-5c50cd1291c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2b8fb31-b681-418e-be37-544224481beb",
            "6cbdd98a-6edc-4a98-8d3d-e871d203db14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5722,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "52870516-31c2-4d3d-a768-05a1ae7ef566",
      "title": "",
      "fullFile": "cypress\\e2e\\OLD\\2-advanced-examples\\window.cy.js",
      "file": "cypress\\e2e\\OLD\\2-advanced-examples\\window.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c610c30b-c661-4123-a36e-9e7ab0d6cbbc",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 639,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "16f210bd-5da7-4f00-bebd-fe2f1cbb5b40",
              "parentUUID": "c610c30b-c661-4123-a36e-9e7ab0d6cbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "6654d4f8-2b8d-470b-b074-f17f2f2dee3c",
              "parentUUID": "c610c30b-c661-4123-a36e-9e7ab0d6cbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "248fee83-2037-4dab-8d92-d1e0239c527a",
              "parentUUID": "c610c30b-c661-4123-a36e-9e7ab0d6cbbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16f210bd-5da7-4f00-bebd-fe2f1cbb5b40",
            "6654d4f8-2b8d-470b-b074-f17f2f2dee3c",
            "248fee83-2037-4dab-8d92-d1e0239c527a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1027,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "80e77a8e-d6ad-4b95-970a-4d3ac9c0fb4e",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\add-multiple-items-to-basket.js",
      "file": "cypress\\e2e\\automation-test-store\\add-multiple-items-to-basket.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "114f6693-9127-4c45-8852-32ddd98b5d3f",
          "title": "Add multiple items to basket",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add multiple items",
              "fullTitle": "Add multiple items to basket Add multiple items",
              "timedOut": null,
              "duration": 5495,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// globalThis.data.productName.forEach(function(element) {\n//     cy.addProductToBasket(element)\n// })\n// cy.get('.dropdown-toggle > .fa').click()\nautoStore_HairCare_PO.addHairCareProductsToBasket();",
              "err": {},
              "uuid": "7c358cec-6107-42fb-9668-2a571eb42337",
              "parentUUID": "114f6693-9127-4c45-8852-32ddd98b5d3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c358cec-6107-42fb-9668-2a571eb42337"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5495,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}